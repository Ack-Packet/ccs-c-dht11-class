CCS PCM C Compiler, Version 5.070, 56587               20-Eyl-19 14:46

               Filename:   C:\Users\omeru\Desktop\CCS Example\dht11class\dht11_class_example.lst

               ROM used:   581 words (7%)
                           Largest free fragment is 2048
               RAM used:   15 (4%) at main() level
                           26 (7%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   196
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  DATA 32,1D
0005:  DATA A0,12
0006:  DATA 75,17
0007:  DATA A5,3A
0008:  DATA 20,10
0009:  DATA A5,3A
000A:  DATA AE,12
000B:  DATA F5,06
000C:  DATA 8A,06
000D:  DATA 0A,00
*
00EE:  MOVF   2C,W
00EF:  CLRF   78
00F0:  SUBWF  2B,W
00F1:  BTFSC  03.0
00F2:  GOTO   0F6
00F3:  MOVF   2B,W
00F4:  MOVWF  77
00F5:  GOTO   102
00F6:  CLRF   77
00F7:  MOVLW  08
00F8:  MOVWF  2D
00F9:  RLF    2B,F
00FA:  RLF    77,F
00FB:  MOVF   2C,W
00FC:  SUBWF  77,W
00FD:  BTFSC  03.0
00FE:  MOVWF  77
00FF:  RLF    78,F
0100:  DECFSZ 2D,F
0101:  GOTO   0F9
0102:  RETURN
0103:  MOVF   78,W
0104:  MOVF   29,W
0105:  MOVWF  2B
0106:  MOVLW  64
0107:  MOVWF  2C
0108:  CALL   0EE
0109:  MOVF   77,W
010A:  MOVWF  29
010B:  MOVF   78,W
010C:  MOVLW  30
010D:  BTFSS  03.2
010E:  GOTO   116
010F:  BTFSS  2A.1
0110:  GOTO   11E
0111:  BTFSC  2A.3
0112:  GOTO   11E
0113:  BTFSC  2A.4
0114:  MOVLW  20
0115:  GOTO   119
0116:  BCF    2A.3
0117:  BCF    2A.4
0118:  BSF    2A.0
0119:  ADDWF  78,F
011A:  MOVF   78,W
011B:  BTFSS  0C.4
011C:  GOTO   11B
011D:  MOVWF  19
011E:  MOVF   29,W
011F:  MOVWF  2B
0120:  MOVLW  0A
0121:  MOVWF  2C
0122:  CALL   0EE
0123:  MOVF   77,W
0124:  MOVWF  29
0125:  MOVF   78,W
0126:  MOVLW  30
0127:  BTFSS  03.2
0128:  GOTO   12F
0129:  BTFSC  2A.3
012A:  GOTO   134
012B:  BTFSS  2A.0
012C:  GOTO   134
012D:  BTFSC  2A.4
012E:  MOVLW  20
012F:  ADDWF  78,F
0130:  MOVF   78,W
0131:  BTFSS  0C.4
0132:  GOTO   131
0133:  MOVWF  19
0134:  MOVLW  30
0135:  ADDWF  29,F
0136:  MOVF   29,W
0137:  BTFSS  0C.4
0138:  GOTO   137
0139:  MOVWF  19
013A:  RETURN
013B:  MOVF   0B,W
013C:  MOVWF  2A
013D:  BCF    0B.7
013E:  BSF    03.5
013F:  BSF    03.6
0140:  BSF    0C.7
0141:  BSF    0C.0
0142:  NOP
0143:  NOP
0144:  BCF    03.5
0145:  BCF    03.6
0146:  BTFSC  2A.7
0147:  BSF    0B.7
0148:  BTFSC  03.0
0149:  GOTO   173
014A:  BSF    03.6
014B:  MOVF   0C,W
014C:  ANDLW  7F
014D:  BCF    03.6
014E:  MOVWF  2A
014F:  BSF    03.6
0150:  MOVF   0D,W
0151:  BCF    03.6
0152:  MOVWF  2B
0153:  BSF    03.6
0154:  MOVF   0F,W
0155:  BCF    03.6
0156:  MOVWF  2C
0157:  MOVF   2A,W
0158:  BTFSS  0C.4
0159:  GOTO   158
015A:  MOVWF  19
015B:  MOVF   2B,W
015C:  BSF    03.6
015D:  MOVWF  0D
015E:  BCF    03.6
015F:  MOVF   2C,W
0160:  BSF    03.6
0161:  MOVWF  0F
0162:  BCF    03.6
0163:  MOVF   0B,W
0164:  MOVWF  2D
0165:  BCF    0B.7
0166:  BSF    03.5
0167:  BSF    03.6
0168:  BSF    0C.7
0169:  BSF    0C.0
016A:  NOP
016B:  NOP
016C:  BCF    03.5
016D:  BCF    03.6
016E:  BTFSC  2D.7
016F:  BSF    0B.7
0170:  DECFSZ 29,F
0171:  GOTO   173
0172:  GOTO   193
0173:  BSF    03.6
0174:  RLF    0C,W
0175:  RLF    0E,W
0176:  ANDLW  7F
0177:  BCF    03.6
0178:  MOVWF  2A
0179:  BSF    03.6
017A:  MOVF   0D,W
017B:  BCF    03.6
017C:  MOVWF  2B
017D:  BSF    03.6
017E:  MOVF   0F,W
017F:  BCF    03.6
0180:  MOVWF  2C
0181:  MOVF   2A,W
0182:  BTFSS  0C.4
0183:  GOTO   182
0184:  MOVWF  19
0185:  MOVF   2B,W
0186:  BSF    03.6
0187:  MOVWF  0D
0188:  BCF    03.6
0189:  MOVF   2C,W
018A:  BSF    03.6
018B:  MOVWF  0F
018C:  INCF   0D,F
018D:  BTFSC  03.2
018E:  INCF   0F,F
018F:  BCF    03.0
0190:  BCF    03.6
0191:  DECFSZ 29,F
0192:  GOTO   13B
0193:  BCF    0A.3
0194:  BCF    0A.4
0195:  GOTO   240 (RETURN)
....................  
.................... #list 
....................  
....................  
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG 
....................  
.................... #use delay(crystal=16MHz) 
*
001B:  MOVLW  2F
001C:  MOVWF  04
001D:  BCF    03.7
001E:  MOVF   00,W
001F:  BTFSC  03.2
0020:  GOTO   02F
0021:  MOVLW  05
0022:  MOVWF  78
0023:  CLRF   77
0024:  DECFSZ 77,F
0025:  GOTO   024
0026:  DECFSZ 78,F
0027:  GOTO   023
0028:  MOVLW  2E
0029:  MOVWF  77
002A:  DECFSZ 77,F
002B:  GOTO   02A
002C:  GOTO   02D
002D:  DECFSZ 00,F
002E:  GOTO   021
002F:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=esp,errors) 
....................  
.................... #define portd (*((unsigned int*)0x08)) 
.................... #define trisd (*((unsigned int*)0x88)) 
....................  
.................... #include <dht11_class.c> 
.................... struct dht11class 
.................... { 
....................    unsigned int data[4]; 
.................... }; 
....................  
.................... void dht11_init(unsigned int pin) 
.................... { 
....................    bit_set(portd,pin); 
*
000E:  MOVLW  01
000F:  MOVWF  77
0010:  MOVF   29,W
0011:  MOVWF  78
0012:  BTFSC  03.2
0013:  GOTO   018
0014:  BCF    03.0
0015:  RLF    77,F
0016:  DECFSZ 78,F
0017:  GOTO   014
0018:  MOVF   77,W
0019:  IORWF  08,F
001A:  RETURN
.................... } 
....................  
.................... unsigned int get_bytes(unsigned int pin) 
*
008B:  MOVLW  08
008C:  MOVWF  32
008D:  CLRF   33
.................... { 
....................    int i=8; 
....................    unsigned int8 ret=0; 
....................     
....................    while(i--) 
008E:  MOVF   32,W
008F:  DECF   32,F
0090:  XORLW  00
0091:  BTFSC  03.2
0092:  GOTO   0CE
....................    { 
....................       while(!((portd>>pin)&0x01)); 
0093:  MOVF   08,W
0094:  MOVWF  77
0095:  MOVF   31,W
0096:  MOVWF  78
0097:  BTFSC  03.2
0098:  GOTO   09D
0099:  BCF    03.0
009A:  RRF    77,F
009B:  DECFSZ 78,F
009C:  GOTO   099
009D:  MOVF   77,W
009E:  ANDLW  01
009F:  BTFSC  03.2
00A0:  GOTO   093
....................        
....................       delay_us(40); 
00A1:  MOVLW  35
00A2:  MOVWF  77
00A3:  DECFSZ 77,F
00A4:  GOTO   0A3
....................        
....................       if((portd>>pin)&0x01) 
00A5:  MOVF   08,W
00A6:  MOVWF  77
00A7:  MOVF   31,W
00A8:  MOVWF  78
00A9:  BTFSC  03.2
00AA:  GOTO   0AF
00AB:  BCF    03.0
00AC:  RRF    77,F
00AD:  DECFSZ 78,F
00AE:  GOTO   0AB
00AF:  MOVF   77,W
00B0:  ANDLW  01
00B1:  BTFSC  03.2
00B2:  GOTO   0CD
....................       { 
....................          bit_set(ret,i); 
00B3:  MOVLW  01
00B4:  MOVWF  77
00B5:  MOVF   32,W
00B6:  MOVWF  78
00B7:  BTFSC  03.2
00B8:  GOTO   0BD
00B9:  BCF    03.0
00BA:  RLF    77,F
00BB:  DECFSZ 78,F
00BC:  GOTO   0B9
00BD:  MOVF   77,W
00BE:  IORWF  33,F
....................          while(((portd>>pin)&0x01)); 
00BF:  MOVF   08,W
00C0:  MOVWF  77
00C1:  MOVF   31,W
00C2:  MOVWF  78
00C3:  BTFSC  03.2
00C4:  GOTO   0C9
00C5:  BCF    03.0
00C6:  RRF    77,F
00C7:  DECFSZ 78,F
00C8:  GOTO   0C5
00C9:  MOVF   77,W
00CA:  ANDLW  01
00CB:  BTFSS  03.2
00CC:  GOTO   0BF
....................       } 
00CD:  GOTO   08E
....................    } 
....................     
....................    return ret; 
00CE:  MOVF   33,W
00CF:  MOVWF  78
.................... } 
....................  
.................... struct dht11class dht11_read(unsigned int pin) 
.................... { 
....................    struct dht11class dht; 
....................     
....................    bit_clear(portd,pin); 
*
0030:  MOVLW  01
0031:  MOVWF  77
0032:  MOVF   29,W
0033:  MOVWF  78
0034:  BTFSC  03.2
0035:  GOTO   03A
0036:  BCF    03.0
0037:  RLF    77,F
0038:  DECFSZ 78,F
0039:  GOTO   036
003A:  MOVF   77,W
003B:  XORLW  FF
003C:  ANDWF  08,F
....................    delay_ms(30); 
003D:  MOVLW  1E
003E:  MOVWF  2F
003F:  CALL   01B
....................    bit_set(portd,pin); 
0040:  MOVLW  01
0041:  MOVWF  77
0042:  MOVF   29,W
0043:  MOVWF  78
0044:  BTFSC  03.2
0045:  GOTO   04A
0046:  BCF    03.0
0047:  RLF    77,F
0048:  DECFSZ 78,F
0049:  GOTO   046
004A:  MOVF   77,W
004B:  IORWF  08,F
....................    delay_us(40); 
004C:  MOVLW  35
004D:  MOVWF  77
004E:  DECFSZ 77,F
004F:  GOTO   04E
....................    //bit_set(trisd,pin); 
....................     
....................    while(((portd>>pin)&0x01)); 
0050:  MOVF   08,W
0051:  MOVWF  77
0052:  MOVF   29,W
0053:  MOVWF  78
0054:  BTFSC  03.2
0055:  GOTO   05A
0056:  BCF    03.0
0057:  RRF    77,F
0058:  DECFSZ 78,F
0059:  GOTO   056
005A:  MOVF   77,W
005B:  ANDLW  01
005C:  BTFSS  03.2
005D:  GOTO   050
....................    while(!((portd>>pin)&0x01)); 
005E:  MOVF   08,W
005F:  MOVWF  77
0060:  MOVF   29,W
0061:  MOVWF  78
0062:  BTFSC  03.2
0063:  GOTO   068
0064:  BCF    03.0
0065:  RRF    77,F
0066:  DECFSZ 78,F
0067:  GOTO   064
0068:  MOVF   77,W
0069:  ANDLW  01
006A:  BTFSC  03.2
006B:  GOTO   05E
....................    while(((portd>>pin)&0x01)); 
006C:  MOVF   08,W
006D:  MOVWF  77
006E:  MOVF   29,W
006F:  MOVWF  78
0070:  BTFSC  03.2
0071:  GOTO   076
0072:  BCF    03.0
0073:  RRF    77,F
0074:  DECFSZ 78,F
0075:  GOTO   072
0076:  MOVF   77,W
0077:  ANDLW  01
0078:  BTFSS  03.2
0079:  GOTO   06C
....................     
....................    for(int i=0;i<4;i++) 
007A:  CLRF   2E
007B:  MOVF   2E,W
007C:  SUBLW  03
007D:  BTFSS  03.0
007E:  GOTO   0D9
....................    { 
....................       dht.data[i]=get_bytes(pin); 
007F:  MOVLW  2A
0080:  ADDWF  2E,W
0081:  MOVWF  78
0082:  CLRF   7A
0083:  BTFSC  03.0
0084:  INCF   7A,F
0085:  MOVF   78,W
0086:  MOVWF  2F
0087:  MOVF   7A,W
0088:  MOVWF  30
0089:  MOVF   29,W
008A:  MOVWF  31
*
00D0:  MOVF   2F,W
00D1:  MOVWF  04
00D2:  BCF    03.7
00D3:  BTFSC  30.0
00D4:  BSF    03.7
00D5:  MOVF   78,W
00D6:  MOVWF  00
00D7:  INCF   2E,F
00D8:  GOTO   07B
....................    } 
....................     
....................    //bit_clear(trisd,pin); 
....................    bit_set(portd,pin); 
00D9:  MOVLW  01
00DA:  MOVWF  77
00DB:  MOVF   29,W
00DC:  MOVWF  78
00DD:  BTFSC  03.2
00DE:  GOTO   0E3
00DF:  BCF    03.0
00E0:  RLF    77,F
00E1:  DECFSZ 78,F
00E2:  GOTO   0DF
00E3:  MOVF   77,W
00E4:  IORWF  08,F
....................     
....................    return dht; 
00E5:  MOVF   2A,W
00E6:  MOVWF  77
00E7:  MOVF   2B,W
00E8:  MOVWF  78
00E9:  MOVF   2C,W
00EA:  MOVWF  79
00EB:  MOVF   2D,W
00EC:  MOVWF  7A
00ED:  RETURN
.................... } 
....................  
....................  
.................... /* 
.................... void bit_set(unsigned int port,unsigned int pin) 
.................... { 
....................    port=(port | (0x01<<pin)); 
.................... } 
.................... */ 
....................  
.................... /* 
.................... void bit_clear(unsigned int port,unsigned int pin) 
.................... { 
....................    port=(port & ~(0x01<<pin)); 
.................... } 
.................... */ 
.................... void main() 
*
0196:  MOVF   03,W
0197:  ANDLW  1F
0198:  MOVWF  03
0199:  CLRF   20
019A:  MOVLW  19
019B:  BSF    03.5
019C:  MOVWF  19
019D:  MOVLW  A2
019E:  MOVWF  18
019F:  MOVLW  90
01A0:  BCF    03.5
01A1:  MOVWF  18
01A2:  BSF    03.5
01A3:  BSF    1F.0
01A4:  BSF    1F.1
01A5:  BSF    1F.2
01A6:  BCF    1F.3
01A7:  MOVLW  07
01A8:  MOVWF  1C
01A9:  BCF    03.7
.................... {    
....................    trisd=0x00; 
01AA:  CLRF   08
....................    portd=0x00; 
01AB:  BCF    03.5
01AC:  CLRF   08
....................     
....................    struct dht11class dht1; 
....................    struct dht11class dht2; 
....................     
....................    dht11_init(0); 
01AD:  CLRF   29
01AE:  CALL   00E
....................    dht11_init(1); 
01AF:  MOVLW  01
01B0:  MOVWF  29
01B1:  CALL   00E
....................     
....................    delay_ms(1000); 
01B2:  MOVLW  04
01B3:  MOVWF  29
01B4:  MOVLW  FA
01B5:  MOVWF  2F
01B6:  CALL   01B
01B7:  DECFSZ 29,F
01B8:  GOTO   1B4
....................     
....................    while(TRUE) 
....................    { 
....................       dht1=dht11_read(0); 
01B9:  CLRF   29
01BA:  CALL   030
01BB:  MOVF   7A,W
01BC:  MOVWF  24
01BD:  MOVF   79,W
01BE:  MOVWF  23
01BF:  MOVF   78,W
01C0:  MOVWF  22
01C1:  MOVF   77,W
01C2:  MOVWF  21
....................       dht2=dht11_read(1); 
01C3:  MOVLW  01
01C4:  MOVWF  29
01C5:  CALL   030
01C6:  MOVF   7A,W
01C7:  MOVWF  28
01C8:  MOVF   79,W
01C9:  MOVWF  27
01CA:  MOVF   78,W
01CB:  MOVWF  26
01CC:  MOVF   77,W
01CD:  MOVWF  25
....................        
....................       fprintf(esp,"1: %u.%u  %u.%u\r\n",dht1.data[0],dht1.data[1],dht1.data[2],dht1.data[3]); 
01CE:  MOVLW  31
01CF:  BTFSS  0C.4
01D0:  GOTO   1CF
01D1:  MOVWF  19
01D2:  MOVLW  3A
01D3:  BTFSS  0C.4
01D4:  GOTO   1D3
01D5:  MOVWF  19
01D6:  MOVLW  20
01D7:  BTFSS  0C.4
01D8:  GOTO   1D7
01D9:  MOVWF  19
01DA:  MOVF   21,W
01DB:  MOVWF  29
01DC:  MOVLW  1B
01DD:  MOVWF  2A
01DE:  CALL   103
01DF:  MOVLW  2E
01E0:  BTFSS  0C.4
01E1:  GOTO   1E0
01E2:  MOVWF  19
01E3:  MOVF   22,W
01E4:  MOVWF  29
01E5:  MOVLW  1B
01E6:  MOVWF  2A
01E7:  CALL   103
01E8:  MOVLW  20
01E9:  BTFSS  0C.4
01EA:  GOTO   1E9
01EB:  MOVWF  19
01EC:  MOVLW  20
01ED:  BTFSS  0C.4
01EE:  GOTO   1ED
01EF:  MOVWF  19
01F0:  MOVF   23,W
01F1:  MOVWF  29
01F2:  MOVLW  1B
01F3:  MOVWF  2A
01F4:  CALL   103
01F5:  MOVLW  2E
01F6:  BTFSS  0C.4
01F7:  GOTO   1F6
01F8:  MOVWF  19
01F9:  MOVF   24,W
01FA:  MOVWF  29
01FB:  MOVLW  1B
01FC:  MOVWF  2A
01FD:  CALL   103
01FE:  MOVLW  0D
01FF:  BTFSS  0C.4
0200:  GOTO   1FF
0201:  MOVWF  19
0202:  MOVLW  0A
0203:  BTFSS  0C.4
0204:  GOTO   203
0205:  MOVWF  19
....................       fprintf(esp,"2: %u.%u  %u.%u\r\n\r\n",dht2.data[0],dht2.data[1],dht2.data[2],dht2.data[3]); 
0206:  MOVLW  32
0207:  BTFSS  0C.4
0208:  GOTO   207
0209:  MOVWF  19
020A:  MOVLW  3A
020B:  BTFSS  0C.4
020C:  GOTO   20B
020D:  MOVWF  19
020E:  MOVLW  20
020F:  BTFSS  0C.4
0210:  GOTO   20F
0211:  MOVWF  19
0212:  MOVF   25,W
0213:  MOVWF  29
0214:  MOVLW  1B
0215:  MOVWF  2A
0216:  CALL   103
0217:  MOVLW  2E
0218:  BTFSS  0C.4
0219:  GOTO   218
021A:  MOVWF  19
021B:  MOVF   26,W
021C:  MOVWF  29
021D:  MOVLW  1B
021E:  MOVWF  2A
021F:  CALL   103
0220:  MOVLW  20
0221:  BTFSS  0C.4
0222:  GOTO   221
0223:  MOVWF  19
0224:  MOVLW  20
0225:  BTFSS  0C.4
0226:  GOTO   225
0227:  MOVWF  19
0228:  MOVF   27,W
0229:  MOVWF  29
022A:  MOVLW  1B
022B:  MOVWF  2A
022C:  CALL   103
022D:  MOVLW  2E
022E:  BTFSS  0C.4
022F:  GOTO   22E
0230:  MOVWF  19
0231:  MOVF   28,W
0232:  MOVWF  29
0233:  MOVLW  1B
0234:  MOVWF  2A
0235:  CALL   103
0236:  MOVLW  0B
0237:  BSF    03.6
0238:  MOVWF  0D
0239:  MOVLW  00
023A:  MOVWF  0F
023B:  BSF    03.0
023C:  MOVLW  04
023D:  BCF    03.6
023E:  MOVWF  29
023F:  GOTO   13B
....................       delay_ms(100); 
0240:  MOVLW  64
0241:  MOVWF  2F
0242:  CALL   01B
0243:  GOTO   1B9
....................    } 
.................... } 
0244:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
